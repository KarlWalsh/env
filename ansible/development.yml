- name: Setup local development environment
  hosts: localhost

  vars:
    user: "{{ ansible_user_id }}"
      
  tasks:
  - name: Applying playbook for user {{ user }}
    debug:
      msg: for user {{ user }}
      
  - name: Install zsh (and dependencies)
    apt:
      pkg:
        - git
        - zsh
      state: present
    become: yes
    
  - name: Configure git
    get_url:
      url: https://raw.githubusercontent.com/karlwalsh/env/master/config/git/gitconfig
      dest: ~/.gitconfig
    
  - name: Configure global gitignore
    get_url:
      url: https://raw.githubusercontent.com/karlwalsh/env/master/config/git/gitignore
      dest: ~/.gitignore
      
  - name: Ensure projects directory exists
    file:
      path: ~/projects
      state: directory
      
  - name: Install oh-my-zsh
    git: 
      repo: https://github.com/robbyrussell/oh-my-zsh
      dest: ~/projects/oh-my-zsh 
      force: yes
    
  - name: Install z (jump around)
    git:
      repo: https://github.com/rupa/z.git
      dest: ~/projects/z
    
  - name: Configure .zshrc
    get_url:
      url: https://raw.githubusercontent.com/karlwalsh/env/master/config/zsh/zshrc
      dest: ~/.zshrc
      
  - name: Switch shell to zsh
    user: 
      name: "{{ user }}"
      shell: /bin/zsh
    become: yes
    
  - name: Install tmux
    apt:
      pkg:
        - tmux
        - tmuxinator
    become: yes
    
  - name: Configure tmux
    get_url:
      url: https://raw.githubusercontent.com/karlwalsh/env/master/config/tmux/tmux.conf
      dest: ~/.tmux.conf
    
  - name: Ensure tmuxinator config directory exists
    file:
      path: ~/.config/tmuxinator
      state: directory
    
  - name: Install tmuxinator config
    get_url:
      url: https://raw.githubusercontent.com/karlwalsh/env/master/config/tmuxinator/default.yml
      dest: ~/.config/tmuxinator/default.yml
      
  - name: Install development tools
    apt:
      pkg:
        - git
        - maven
        - vim
        - httpie
        - curl
        - tilda
        - glogg
      state: present
    become: yes
    
  - name: Install fonts
    apt:
      pkg: 
        - fonts-firacode
        - fonts-liberation
    become: yes
    
  - name: Download minikube
    get_url:
      url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      dest: /usr/local/bin/minikube
    become: yes
      
  - name: Install minikube
    file:
      path: /usr/local/bin/minikube
      mode: '0755'
    become: yes
      
  - name: Get stable kubectl version
    uri: 
      url: https://dl.k8s.io/release/stable.txt
      return_content: yes
    register: kubectl_version
    
  - name: "Download kubectl {{ kubectl_version.content }}"
    get_url:
      url: "https://dl.k8s.io/release/{{ kubectl_version.content }}/bin/linux/amd64/kubectl"
      dest: /usr/local/bin/kubectl
    become: yes
      
  - name: Make kubectl executable
    file:
      path: /usr/local/bin/kubectl
      mode: '0755'
    become: yes
    
  - name: Download kubectx
    get_url:
      url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx
      dest: /usr/local/bin/kubectx
    become: yes
      
  - name: Make kubectx executable
    file:
      path: /usr/local/bin/kubectx
      mode: '0755'
    become: yes
    
  - name: Download kubens
    get_url:
      url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
      dest: /usr/local/bin/kubens
    become: yes
      
  - name: Make kubens executable
    file:
      path: /usr/local/bin/kubens
      mode: '0755'
    become: yes
    
  - name: Ensure zsh completions directory is available
    file:
      path: ~/projects/oh-my-zsh/completions
      state: directory
        
  - name: Install kubectx zsh completions
    get_url:
      url: https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubectx.zsh
      dest: ~/projects/oh-my-zsh/completions/_kubectx.zsh
        
  - name: Install kubens zsh completions
    get_url:
      url: https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubens.zsh
      dest: ~/projects/oh-my-zsh/completions/_kubens.zsh
    
  - name: Install IntelliJ IDEA (snap)
    snap:
      name: intellij-idea-ultimate
      classic: yes
    become: yes
      
  - name: Install tools
    apt:
      pkg:
        - htop
        - neofetch
      state: present
    become: yes
      
  - name: Install JDK 8
    apt: 
      name: openjdk-8-jdk
    become: yes
   
  - name: Install JDK 11
    apt:
      name: openjdk-11-jdk
    become: yes
      
  - name: Select JDK 11 (java)
    alternatives:
      name: java
      path: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
    become: yes
      
  - name: Select JDK 11 (javac)
    alternatives:
      name: javac
      path: /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
    become: yes

  - name: Install docker pre-requisites
    apt:
      pkg:
        - apt-transport-https
        - ca-certificates
        - gnupg-agent
        - software-properties-common
        - curl
    become: yes

  - name: Add Docker gpg apt key
    apt_key:
      keyserver: https://download.docker.com/linux/ubuntu/gpg
      id: 0EBFCD88
      state: present
    become: yes
      
  - name: Add Docker repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu groovy stable
      state: present
      update_cache: yes
    become: yes

  - name: Install docker-ce
    apt:
      pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: present
    become: yes
      
  - name: Install docker-compose
    apt:
      name: docker-compose
    become: yes
      
  - name: Ensure docker group exists
    group:
      name: docker
      state: present
    become: yes
      
  - name: Add user "{{ user }}" to docker group
    user: 
      name: "{{ user }}"
      groups: docker
      append: yes
    become: yes
    
  - name: Make sure docker is running
    systemd:
      name: docker.service
      state: started
      enabled: yes
    become: yes
    
  - name: Make sure containerd is running
    systemd:
      name: containerd.service
      state: started
      enabled: yes
    become: yes

