- name: Setup local development environment
  hosts: localhost

  vars:
    user: "{{ ansible_user_id }}"
    configure_git: false
      
  tasks:
  - name: Playbook information
    debug:
      msg: "Applying playbook for user '{{ user }}'"

  - name: Install and configure git
    block:
      - name: Install git
        apt:
          pkg:
            - git
          state: present
        become: yes

      - name: Configure git
        when: configure_git | bool
        block:
          - name: Git configuration
            debug:
              msg: "Configuring git with global user {{ git_username }} and global email {{ git_email }}"

          - name: Apply base gitconfig
            get_url:
              url: https://raw.githubusercontent.com/karlwalsh/env/master/config/git/gitconfig
              dest: ~/.gitconfig

          - name: Configure git username
            community.general.git_config:
              name: user.name
              value: "{{ git_username }}"
              scope: global

          - name: Configure git email address
            community.general.git_config:
              name: user.email
              value: "{{ git_email }}"
              scope: global

          - name: Configure global gitignore
            get_url:
              url: https://raw.githubusercontent.com/karlwalsh/env/master/config/git/gitignore
              dest: ~/.gitignore

  - name: Ensure projects directory exists
    file:
      path: ~/projects
      state: directory

  - name: Install and configure zsh environment
    block:
      - name: Install zsh
        apt:
          pkg:
            - zsh
          state: present
        become: yes

      - name: Install oh-my-zsh
        git:
          repo: https://github.com/robbyrussell/oh-my-zsh
          dest: ~/projects/oh-my-zsh
          force: yes

      - name: Install z (jump around)
        git:
          repo: https://github.com/rupa/z.git
          dest: ~/projects/z

      - name: Configure .zshrc
        get_url:
          url: https://raw.githubusercontent.com/karlwalsh/env/master/config/zsh/zshrc
          dest: ~/.zshrc

      - name: Switch shell to zsh
        user:
          name: "{{ user }}"
          shell: /bin/zsh
        become: yes

  - name: Install and configure tmux
    block:
      - name: Install tmux
        apt:
          pkg:
            - tmux
            - tmuxinator
          state: present
        become: yes

      - name: Configure tmux
        get_url:
          url: https://raw.githubusercontent.com/karlwalsh/env/master/config/tmux/tmux.conf
          dest: ~/.tmux.conf

      - name: Ensure tmuxinator config directory exists
        file:
          path: ~/.config/tmuxinator
          state: directory

      - name: Configure tmuxinator
        get_url:
          url: https://raw.githubusercontent.com/karlwalsh/env/master/config/tmuxinator/default.yml
          dest: ~/.config/tmuxinator/default.yml

  - name: Install and configure vim
    block:
      - name: Install development tools
        apt:
          pkg:
            - vim
          state: present
        become: yes

      - name: Configure vim
        get_url:
          url: https://raw.githubusercontent.com/karlwalsh/env/master/config/vim/vimrc
          dest: ~/.vimrc
      
  - name: Install development tools (apt)
    apt:
      pkg:
        - maven
        - httpie
        - curl
        - tilda
        - glogg
      state: present
    become: yes

  - name: Install development tools (snaps)
    block:
      - name: Install IntelliJ IDEA (snap)
        snap:
          name: intellij-idea-ultimate
          classic: yes
        become: yes

      - name: Install Insomnia REST Client
        snap:
          name: insomnia
          classic: yes
        become: yes

  - name: Install fonts
    apt:
      pkg: 
        - fonts-firacode
        - fonts-liberation
    become: yes

  - name: Install and configure kubernetes
    block:
      - name: Get stable kubectl version
        uri:
          url: https://dl.k8s.io/release/stable.txt
          return_content: yes
        register: kubectl_version

      - name: Download and install kubernetes components
        block:
          - name: Download minikube
            get_url:
              url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
              dest: /usr/local/bin/minikube

          - name: Install minikube
            file:
              path: /usr/local/bin/minikube
              mode: '0755'

          - name: Download kubectl {{ kubectl_version.content }}
            get_url:
              url: "https://dl.k8s.io/release/{{ kubectl_version.content }}/bin/linux/amd64/kubectl"
              dest: /usr/local/bin/kubectl

          - name: Make kubectl executable
            file:
              path: /usr/local/bin/kubectl
              mode: '0755'

          - name: Download kubectx
            get_url:
              url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx
              dest: /usr/local/bin/kubectx
            become: yes

          - name: Make kubectx executable
            file:
              path: /usr/local/bin/kubectx
              mode: '0755'

          - name: Download kubens
            get_url:
              url: https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens
              dest: /usr/local/bin/kubens

          - name: Make kubens executable
            file:
              path: /usr/local/bin/kubens
              mode: '0755'
        become: yes

      - name: Ensure zsh completions directory is available
        file:
          path: ~/projects/oh-my-zsh/completions
          state: directory

      - name: Install kubectx zsh completions
        get_url:
          url: https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubectx.zsh
          dest: ~/projects/oh-my-zsh/completions/_kubectx.zsh

      - name: Install kubens zsh completions
        get_url:
          url: https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubens.zsh
          dest: ~/projects/oh-my-zsh/completions/_kubens.zsh

  - name: Install and configure JDKs
    block:
      - name: Install JDK 8
        apt:
          name: openjdk-8-jdk

      - name: Install JDK 11
        apt:
          name: openjdk-11-jdk

      - name: Select JDK 11 (java)
        alternatives:
          name: java
          path: /usr/lib/jvm/java-11-openjdk-amd64/bin/java

      - name: Select JDK 11 (javac)
        alternatives:
          name: javac
          path: /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
    become: yes

  - name: Install and configure docker
    block:
      - name: Install docker pre-requisites
        apt:
          pkg:
            - apt-transport-https
            - ca-certificates
            - gnupg-agent
            - software-properties-common
            - curl
        become: yes

      - name: Configure apt so we can install docker
        block:
          - name: Add Docker gpg apt key
            apt_key:
              keyserver: https://download.docker.com/linux/ubuntu/gpg
              id: 0EBFCD88
              state: present

          - name: Add Docker repository
            apt_repository:
              repo: deb https://download.docker.com/linux/ubuntu groovy stable
              state: present
              update_cache: yes
        become: yes

      - name: Install docker components
        block:
          - name: Install docker-ce
            apt:
              pkg:
                - docker-ce
                - docker-ce-cli
                - containerd.io
              state: present

          - name: Install docker-compose
            apt:
              name: docker-compose
        become: yes

      - name: Ensure user {{ user }} can access docker
        block:
          - name: Ensure docker group exists
            group:
              name: docker
              state: present

          - name: Add user {{ user }} to docker group
            user:
              name: "{{ user }}"
              groups: docker
              append: yes
        become: yes

      - name: Ensure docker is running
        block:
          - name: Ensure docker service is running
            systemd:
              name: docker.service
              state: started
              enabled: yes

          - name: Ensure containerd service is running
            systemd:
              name: containerd.service
              state: started
              enabled: yes
        become: yes

      - name: Use portainer to manage docker
        block:
          - name: Create portainer volume
            docker_volume:
              name: portainer_data

          - name: Start portainer container
            docker_container:
              name: portainer
              image: portainer/portainer-ce
              restart_policy: always
              ports:
                - 8000:8000
                - 9000:9000
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
                - portainer_data:/data
        become: yes

  - name: Install desktop apps and tools
    block:
      - name: Install Dropbox
        block:
          - name: Ensure Dropbx dist directory exists
            file:
              path: ~/.dropbox-dist
              state: directory

          - name: Download and extract Dropbox
            ansible.builtin.unarchive:
              src: https://www.dropbox.com/download?plat=lnx.x86_64
              dest: ~/
              creates: ~/.dropbox-dist
              remote_src: yes

          - name: Start Dropbox
            shell: "~/.dropbox-dist/dropboxd &"

      - name: Install tools
        apt:
          pkg:
            - htop
            - neofetch
          state: present
        become: yes