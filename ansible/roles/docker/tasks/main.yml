---
- name: Install and configure docker
  block:
    - debug:
        msg: "Install and configuring docker"

    - name: Install docker pre-requisites
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - gnupg-agent
        state: present
      become: yes

    - name: Configure apt so we can install docker
      block:
        - name: Add Docker gpg apt key
          apt_key:
            keyserver: https://download.docker.com/linux/ubuntu/gpg
            id: 0EBFCD88
            state: present

        - name: Add Docker repository
          apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu groovy stable
            state: present
            update_cache: yes
      become: yes

    - name: Install docker components
      block:
        - name: Install docker-ce
          apt:
            pkg:
              - docker-ce
              - docker-ce-cli
              - containerd.io
            state: present

        - name: Install docker-compose
          apt:
            name: docker-compose
      become: yes

    - name: Ensure user {{ user }} can access docker
      block:
        - name: Ensure docker group exists
          group:
            name: docker
            state: present

        - name: Add user {{ user }} to docker group
          user:
            name: "{{ user }}"
            groups: docker
            append: yes
      become: yes

    - name: Ensure docker is running
      block:
        - debug:
            msg: "Ensure docker services are running"

        - name: Ensure docker service is running
          systemd:
            name: docker.service
            state: started
            enabled: yes

        - name: Ensure containerd service is running
          systemd:
            name: containerd.service
            state: started
            enabled: yes
      become: yes

    - name: Use portainer to manage docker
      block:
        - debug:
            msg: "Manage portainer docker container"

        - name: Create portainer volume
          docker_volume:
            name: portainer_data

        - name: Start portainer container
          docker_container:
            name: portainer
            image: portainer/portainer-ce
            restart_policy: always
            ports:
              - 8000:8000
              - 9000:9000
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - portainer_data:/data
      become: yes